from django.shortcuts import render,redirect,reverse
from publisher import models
from django.views import View
# Create your views here.

# def publisher_list(request):
#     allPub = models.Publisher.objects.all().values()
#     # print(request)  # <WSGIRequest: GET '/publisher_list'>
#     # print(type(request))    # <class 'django.core.handlers.wsgi.WSGIRequest'>
#     # print(allPub)   # <QuerySet [{'name': '中国人民出版社', 'id': 1}, {'name': '日本人民出版社', 'id': 2}, {'name': '美国人民出版社', 'id': 3}, {'name': '德国人民出版社', 'id': 4}, {'name': '苏联人民出版社', 'id': 5}]>
#     # print(type(allPub)) # <class 'django.db.models.query.QuerySet'>
#     # for i in allPub:
#     #     print(i['id'],i['name'])
#     return render(request,'publisher_list.html',{'all_Pub':allPub})
class PublisherList(View):
    def get(self,request,*args,**kwargs):
        allPub = models.Publisher.objects.all().values()
        return render(request,'publisher_list.html',{'all_Pub':allPub})

# def publisher_add(request):
#     if request.method == 'POST':
#         pub_name = request.POST.get('pub_name')
#         if not pub_name:
#             return render(request,'publisher_add.html',{'error':'出版社不能为空'})
#         models.Publisher.objects.create(name=pub_name)
#         # ret = models.Publisher.objects.create(name=pub_name)
#         # print(ret,type(ret))    # Publisher object <class 'publisher.models.Publisher'>
#         return redirect(reverse('app01:pub_list'))
#     return render(request,'publisher_add.html')
class PublisherAdd(View):
    def get(self,request,*args,**kwargs):
        return render(self.request,'publisher_add.html')

    def post(self,request,*args,**kwargs):
        pub_name = request.POST.get('pub_name')
        if not pub_name:
            return render(self.request,'publisher_add.html',{'error':'出版社不能为空'})
        models.Publisher.objects.create(name=pub_name)
        return redirect(reverse('app01:pub_list'))

# def publisher_del(request,pk):
#     # pk = request.GET.get('pk')    # 通过?来获取参数，然后用request.GET.get方法捕获参数
#     # print(pk)
#     # models.Publisher.objects.get(pk=pk).delete()    # 删除单个对象
#     # print(pk,type(pk)) # 分组：取代?获取参数，可直接从url中补货参数，按照位置传递参数pk;命名分组：按照关键字参数传参
#     models.Publisher.objects.filter(pk=pk).delete() # 删除多个满足条件的对象
#     return redirect(reverse('app01:pub_list'))
class PublisherDel(View):
    def get(self,request,*args,**kwargs):   # 如果此处不写request，后面代码要用self.request来代替(两者是相同的)
        pk = kwargs['pk']
        print(pk)
        models.Publisher.objects.filter(pk=pk).delete()
        return redirect(reverse('app01:pub_list'))

# def publisher_edit(request,pk):
#     # pk = request.GET.get('pk')
#     obj = models.Publisher.objects.get(pk=pk)
#     if request.method == 'POST':
#         pub_name = request.POST.get('pub_name')
#         if not pub_name:
#             return render(request,'publisher_edit.html',{'error':'出版社不能为空'})
#         obj.name = pub_name
#         obj.save()
#         return redirect(reverse('app01:pub_list'))
#     return render(request,'publisher_edit.html',{'name':obj.name})  # render可直接跳转到template文件夹下到html文件;路径在setting.py文件有写

class PublisherEdit(View):
    def get(self,request,*args,**kwargs):
        pk = kwargs['pk']
        obj = models.Publisher.objects.get(pk=pk)
        return render(request,'publisher_edit.html',{'name':obj.name})
    def post(self,request,*args,**kwargs):
        pub_name = request.POST.get('pub_name')
        pk = kwargs['pk']
        obj = models.Publisher.objects.get(pk=pk)
        if not pub_name:
            return render(request,'publisher_edit.html',{'error':'出版社不能为空'})
        obj.name = pub_name
        obj.save()
        return redirect(reverse('app01:pub_list'))

class BookList(View):
    def get(self,request,*args,**kwargs):
        all_books = models.Book.objects.all()   # .all()返回的是一个对象，如果再加上.values()则是返回的字典
        print(all_books)
        return render(request,'book_list.html',{'all_books':all_books})
